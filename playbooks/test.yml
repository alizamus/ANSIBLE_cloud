---
- name: test the cloud
  hosts: cloud
  vars_files:
    - config_vars.yml
  tasks:
    - name: install git
      apt: name=git
    - name: set the time zone variables
      copy: >
        content='America/New_York'
        dest=/etc/timezone
        owner=root
        group=root
        mode=0644
        backup=yes
      notify:
        - update time zone
    - name: creating a tenant
      keystone_user_custom: > 
        tenant={{'sandbox' + item }}
        tenant_description="new tenant" 
        login_tenant_name=admin
        login_user=admin
        login_password={{ admin_pass }}
      with_sequence: count={{ number_of_projects }}
    - name: assiggn user to the tenat
      keystone_user_custom: >
        user={{'user' + item }} 
        tenant={{'sandbox' + item }}
        password={{'user' + item }}
        login_tenant_name=admin
        login_user=admin
        login_password={{ admin_pass }}
      with_sequence: count={{ number_of_projects }}
    - name: assiggn admin user to the projects
      keystone_user_custom: >
        user=admin
        tenant={{'sandbox' + item }}
        password={{ admin_pass }}
        login_tenant_name=admin
        login_user=admin
        login_password={{ admin_pass }}
      with_sequence: count={{ number_of_projects }}
    - name: apply the admin role to the test user
      keystone_user_custom: >
        role=admin 
        user={{'user' + item }}
        tenant={{'sandbox' + item }}
        login_tenant_name=admin
        login_user=admin
        login_password={{ admin_pass }}
      with_sequence: count={{ number_of_projects }}
    - name: apply the admin role to admin user in each project
      keystone_user_custom: >
        role=admin 
        user=admin
        tenant={{'sandbox' + item }}
        login_tenant_name=admin
        login_user=admin
        login_password={{ admin_pass }}
      with_sequence: count={{ number_of_projects }}
    - name: Create a network for the users
      neutron_network_custom: >
        name={{'user' + item +'-net' }}
        state=present
        router_external=yes
        login_username={{'user' + item }}
        login_password={{'user' + item }}
        login_tenant_name={{'sandbox' + item }}
        auth_url='http://127.0.0.1:5000/v2.0/'
      with_sequence: count={{ number_of_projects }}
    #- name: Create a subnet for the users
    #  neutron_subnet_custom: >
    #    state=present
    #    login_username={{'user' + item }}
    #    login_password={{'user' + item }}
    #    login_tenant_name={{'sandbox' + item }}
    #    tenant_name={{'sandbox' + item }}
    #    network_name={{'user' + item +'-net' }}
    #    name={{'user' + item +'-subnet' }}
    #    cidr={{'10.1.3.' + item + '/29'}}
    #    auth_url='http://127.0.0.1:5000/v2.0/'
    #    user_number={{item}}
    #  with_sequence: count={{ number_of_projects }}
    - name: Clonning the repository
      git: >
        repo=https://github.com/alizamus/cloud-config.git
        dest=/root/code
        force=yes
    - name: Adding an IPAM
      command: /root/code/config --username admin --password {{ admin_pass }} --tenant admin --api-server 127.0.0.1 add ipam ipam-default
    - name: assigning the route target for the networks
      command: /root/code/add-network.py --user={{ item }} --datacenter={{ data_center_nummber}}  --r_target={{route_target}}
      with_sequence: count={{ number_of_projects }}
    - name: Create a floating ip pool for the users
      command: /root/code/add-floating.py --user={{ item }} --datacenter={{ data_center_nummber}}
      with_sequence: count={{ number_of_projects }}
    - name: Create a subnet for the users
      neutron_subnet_custom: >
        state=present
        login_username={{'user' + item }}
        login_password={{'user' + item }}
        login_tenant_name={{'sandbox' + item }}
        tenant_name={{'sandbox' + item }}
        network_name={{'user' + item +'-net' }}
        name={{'user' + item +'-subnet' }}
        cidr={{'10.1.3.' + item + '/29'}}
        auth_url='http://127.0.0.1:5000/v2.0/'
        user_number={{item}}
      with_sequence: count={{ number_of_projects }}
  handlers:
    - name: update time zone
      command: dpkg-reconfigure --frontend noninteractive tzdata